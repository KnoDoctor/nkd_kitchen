generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String  @map("user_id")
  type              String
  provider          String
  providerAccountId String  @map("provider_account_id")
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model User {
  id            String        @id @default(cuid())
  name          String?
  email         String?       @unique
  emailVerified DateTime?     @map("email_verified")
  image         String?
  accounts      Account[]
  sessions      Session[]
  roles         users_roles[]

  @@map("users")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verificationtokens")
}

model roles {
  role_id   String        @id @db.Uuid
  role_name String
  users     users_roles[]
}

model users_roles {
  users_roles_id String @id @db.Uuid
  user_id        String
  role_id        String @db.Uuid
  role           roles  @relation(fields: [role_id], references: [role_id])
  user           User   @relation(fields: [user_id], references: [id])
}

// model people {
//   person_id  String      @id @db.Uuid
//   first_name String?
//   last_name  String?
//   leads      prospects[]
// }

// model projects {
//   project_id          String  @id @db.Uuid
//   project_name        String
//   project_description String?
//   project_data        String?
//   project_hero_image  String?
//   is_published        Boolean @default(false)
// }

// model articles {
//   article_id            String  @id @db.Uuid
//   article_name          String
//   article_lookup_string String
//   article_description   String?
//   cms_data              Json    @default("[]")
//   article_prompt        String?
//   article_ai_response   String?
//   article_hero_image    String?
//   is_published          Boolean @default(false)
// }

model pages {
  page_id            String  @id @db.Uuid
  page_name          String  @db.VarChar(150)
  page_description   String?
  page_hero_image    String?
  cms_data           Json    @default("[]")
  page_lookup_string String  @db.VarChar(500)
  is_published       Boolean @default(false)
}

// model prospects {
//   prospect_id                 String @id @db.Uuid
//   prospect_sales_funnel_stage Int
//   person_id                   String @db.Uuid
//   person                      people @relation(fields: [person_id], references: [person_id])
// }

// model entities {
//   entity_id   String @id @db.Uuid
//   entity_name String @db.VarChar(150)
// }

model modules {
  module_id    String  @id @db.Uuid
  module_name  String  @db.VarChar(150)
  module_image String? @db.VarChar(150)
  module_slug  String  @db.VarChar(150)
}
